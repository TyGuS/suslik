#. -c 2
/*sorted list: insert an element complete prog*/

void srtl_insert (loc x, loc r)
{0 <= n /\ 0 <= k /\ k <= 7 ; r :-> k ** srtl(x, n, lo, hi) }
{n1 == n + 1 /\ lo1 == (k <= lo ? k : lo)  /\ hi1 == (hi <= k ? k : hi) ; r :-> y ** srtl(y, n1, lo1, hi1) }
{
  let k2 = *r;
  if (x == 0) {
    let y2 = malloc(2);
    *r = y2;
    *(y2 + 1) = 0;
    *y2 = k2;
  } else {
    let v2 = *x;
    if (true && v2 <= k2) {
      let nxt2 = *(x + 1);
      srtl_insert(nxt2, r);
      let y12 = *r;
      *(x + 1) = y12;
      *r = x;
    } else {
      let nxt2 = *(x + 1);
      srtl_insert(nxt2, x);
      let y12 = *x;
      *r = x;
      *(x + 1) = y12;
      *x = k2;
    }
  }
}
#####
void srtl_insert (loc x, loc r) {
  let k2 = *r;
  if (x == 0) {
    let y2 = malloc(2);
    *r = y2;
    *(y2 + 1) = 0;
    *y2 = k2;
  } else {
    let v2 = *x;
    if (true && v2 <= k2) {
      let nxt2 = *(x + 1);
      srtl_insert(nxt2, r);
      let y12 = *r;
      *(x + 1) = y12;
      *r = x;
    } else {
      let nxt2 = *(x + 1);
      srtl_insert(nxt2, x);
      let y12 = *x;
      *r = x;
      *(x + 1) = y12;
      *x = k2;
    }
  }
}