predicate dll(loc x, loc z, seq s) {
|  x == 0 => { s == <> ; emp }
|  not (x == 0) =>
   { s == v :: s1 ; [x, 3] ** x :-> v ** (x + 1) :-> w ** (x + 2) :-> z ** dll(w, x, s1) }
}

predicate sll(loc x, seq s) {
|  x == 0        => { s == <> ; emp }
|  not (x == 0)  => { s == v :: s1 ; [x, 2] ** x :-> v ** (x + 1) :-> nxt ** sll(nxt, s1) }
}
